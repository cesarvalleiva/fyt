{"version":3,"sources":["components/navbar/Navbar.js","components/auth/AuthService.js","components/auth/Signup.js","components/auth/Login.js","components/home/Home.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","userInSession","className","to","name","username","onClick","e","logout","src","imgPath","alt","AuthService","signup","password","service","post","then","response","data","login","console","log","loggedin","get","this","axios","create","baseURL","process","REACT_APP_API_URL","withCredentials","Signup","handleFormSubmit","event","preventDefault","state","setState","getUser","user","catch","error","handleChange","target","value","onSubmit","type","onChange","Component","Login","Home","trainers","map","trainer","Fragment","key","_id","Card","style","width","loggedInUser","Img","variant","Body","Title","Text","Button","App","userObj","err","fetchUser","exact","path","render","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.37ac3d61.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n// import AuthService from \"../auth/AuthService\";\nimport \"./Navbar.scss\";\n\nfunction Navbar(props) {\n  const handleLogout = e => {\n    props.logout();\n  };\n\n  const { userInSession } = props;\n  if (userInSession) {\n    return (\n        <nav className=\"nav-style\">\n          <ul>\n            <div className=\"menu\">\n              <li>\n                <Link to=\"/trainers\">Trainers</Link>\n              </li>\n            </div>\n            <div className=\"options\">\n              <li>\n                {userInSession.name ? userInSession.name : userInSession.username}\n              </li>\n              <li>\n                <Link to=\"\" onClick={handleLogout}>\n                  Logout\n                </Link>\n              </li>\n              <li>\n                <img src={userInSession.imgPath} alt={userInSession.username} />\n              </li>\n            </div>\n          </ul>\n\n          <div className=\"header\">\n            <h2>Welcome {userInSession.username} - Ironhacker</h2>\n          </div>\n        </nav>\n    );\n  } else {\n    return (\n      <div>\n        <nav className=\"nav-style\">\n          <ul>\n            <li>\n              <Link to=\"/signup\">Signup</Link>\n            </li>\n            <li>\n              <Link to=\"/login\">Login</Link>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import axios from \"axios\";\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      // baseURL: \"http://localhost:4000/api/auth\",\n      baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n      withCredentials: true\n    });\n  }\n\n  signup = (username, password) => {\n    return this.service\n      .post(\"/signup\", { username, password })\n      .then(response => response.data);\n  };\n\n  login = (username, password) => {\n    console.log(username, password);\n    return this.service\n      .post(\"/login\", { username, password })\n      .then(response => response.data);\n  };\n\n  loggedin = () => {\n    return this.service.get(\"/currentUser\").then(response => response.data);\n  };\n\n  logout = () => {\n    return this.service.get(\"/logout\").then(response => response.data);\n  };\n}\n\nexport default AuthService;\n","// auth/Signup.js\nimport React, { Component } from 'react';\nimport AuthService from './AuthService'\n\n//signup y login son iguales a excepción de el html renderizado y el endpoint de nuestra API rest a la que llamamos\n//uno llama a /signup y el otro a /login usando nuestro AuthService\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n    \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    //aquí llamamos al endpoint /signup de nuestra API Rest usando nuestro AuthService\n    this.service.signup(username, password)\n    .then( response => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n        });\n        //aquí elevamos el nuevo usuario una vez creado a App usando getUser via props\n        //por tanto, informamos a App de que el nuevo usuario ha sido creado, provocando un re-render\n        //y mostrando la parte de contenidos. Mira la función getUser de App para más info (date cuenta de que establece el state de App)\n        this.props.getUser(response.user)\n    })\n    .catch(error => {\n      this.setState({\n        username: username,\n        password: password,\n        error: true\n      });\n    })\n  }\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n      \n\n  render() {\n    return(\n      <div>\n        <h3>Welcome!, create your account next:</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Username:</label>\n            <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n          \n          <fieldset>\n            <label>Password:</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          </fieldset>\n          \n          <input type=\"submit\" value=\"Sign up\" />\n        </form>\n\n        <h1>{this.state.error ? 'Error' : ''}</h1>\n      </div>\n    )\n  }\n}\n\nexport default Signup;","// auth/Signup.js\nimport React, { Component } from \"react\";\n// import { Link } from 'react-router-dom';\nimport AuthService from \"./AuthService\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\" };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service.login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          error: false\n        });\n        this.props.getUser(response);\n      })\n\n      .catch(error => {\n        console.log(\"entra en error\");\n      });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <h3>Please, login to our site</h3>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Username:</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n\n          <fieldset>\n            <label>Password:</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={e => this.handleChange(e)}\n            />\n          </fieldset>\n\n          <input type=\"submit\" value=\"Login\" />\n        </form>\n\n        <h1>{this.state.error ? \"Error\" : \"\"}</h1>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport './Home.scss';\nimport axios from 'axios';\n\nclass Home extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttrainers: []\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\taxios.get('http://localhost:4000/api/trainers').then((trainers) => {\n\t\t\tthis.setState({\n\t\t\t\t...this.state,\n\t\t\t\ttrainers: trainers.data\n\t\t\t});\n\t\t});\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"all\">\n\t\t\t\t<div className=\"container width\">\n\t\t\t\t\t{this.state.trainers &&\n\t\t\t\t\t\tthis.state.trainers.map((trainer) => (\n\t\t\t\t\t\t\t<React.Fragment key={trainer._id}>\n\t\t\t\t\t\t\t\t<Card style={{ width: '18rem' }}>\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tto={this.props.loggedInUser ? `/trainer/${trainer._id}` : `/login`}\n\t\t\t\t\t\t\t\t\t\tclassName=\"link\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{/* <Link to={`/trainer/${trainer._id}`} className=\"link\"> */}\n\t\t\t\t\t\t\t\t\t\t<Card.Img variant=\"top\" src={trainer.imgPath} alt={trainer.name} />\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t<Card.Title>\n\t\t\t\t\t\t\t\t\t\t\t<Link to={`/trainer/${trainer._id}`} className=\"link\">\n\t\t\t\t\t\t\t\t\t\t\t\t{trainer.name}\n\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t</Card.Title>\n\t\t\t\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t\t\t\tSome quick example text to build on the card title and make up the bulk of\n\t\t\t\t\t\t\t\t\t\t\tthe card's content.\n\t\t\t\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"success\">Go somewhere</Button>\n\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Navbar from './components/navbar/Navbar';\nimport Signup from './components/auth/Signup';\nimport Login from './components/auth/Login';\nimport AuthService from './components/auth/AuthService';\n// import Contents from \"./components/contents/Contents\";\nimport Home from './components/home/Home';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { loggedInUser: null };\n\t\tthis.service = new AuthService();\n\t}\n\n\tgetUser = (userObj) => {\n\t\tthis.setState({\n\t\t\tloggedInUser: userObj\n\t\t});\n\t\t// this.props.history.push('/');\n\t};\n\n\tlogout = () => {\n\t\tthis.service.logout().then(() => {\n\t\t\tthis.setState({ loggedInUser: null });\n\t\t});\n\t};\n\n\tfetchUser() {\n\t\treturn this.service\n\t\t\t.loggedin()\n\t\t\t.then((response) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tloggedInUser: response\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tloggedInUser: false\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.fetchUser();\n\t}\n\n\trender() {\n\t\tconst { loggedInUser } = this.state;\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{loggedInUser ? (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t\t\t<Navbar userInSession={loggedInUser} logout={this.logout} />\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path=\"/\" render={() => <Home {...this.state} />} />\n\t\t\t\t\t\t\t<Route exact path=\"/trainers\" component={Home} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path=\"/\" render={() => <Home {...this.state} />} />\n\t\t\t\t\t\t\t<Route exact path=\"/\" render={() => <h1>LO SIENTO HULIO, NO ESTAS LOGUEADO</h1>} />\n\t\t\t\t\t\t\t<Route exact path=\"/login\" render={() => <Login getUser={(user) => this.getUser(user)} />} />\n\t\t\t\t\t\t\t<Route exact path=\"/signup\" component={Signup} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}